{"ast":null,"code":"export default class HttpClient {\n  constructor(baseURL) {\n    this.baseURL = baseURL;\n  } //url: 인자로 전달받는 나머지 경로\n\n\n  async fetch(url, options) {\n    const response = await this.fetch(`${this.baseURL}${url}`, { ...options,\n      //인자로 받은것을 그대로 복사\n      headers: {\n        'Content-Type': 'application/json',\n        ...options.headers\n      }\n    });\n    let data;\n\n    try {\n      data = await response.json();\n    } catch (error) {\n      //response에 body가 없는 경우\n      console.error(error);\n    }\n\n    if (response.status > 299 || response.status < 200) {\n      const message = data && data.message ? data.message : 'Sommething went wrong!';\n      throw new Error(message);\n    }\n\n    return data;\n  }\n\n}","map":{"version":3,"sources":["/Users/seungmin/Desktop/nodeJS-ex/mini-Twitter/client/src/network/http.js"],"names":["HttpClient","constructor","baseURL","fetch","url","options","response","headers","data","json","error","console","status","message","Error"],"mappings":"AAAA,eAAe,MAAMA,UAAN,CAAgB;AAC3BC,EAAAA,WAAW,CAACC,OAAD,EAAS;AAChB,SAAKA,OAAL,GAAaA,OAAb;AACH,GAH0B,CAK3B;;;AACW,QAALC,KAAK,CAACC,GAAD,EAAKC,OAAL,EAAa;AACpB,UAAMC,QAAQ,GAAG,MAAM,KAAKH,KAAL,CAAY,GAAE,KAAKD,OAAQ,GAAEE,GAAI,EAAjC,EAAmC,EACtD,GAAGC,OADmD;AAC1C;AACZE,MAAAA,OAAO,EAAC;AACJ,wBAAe,kBADX;AAEJ,WAAGF,OAAO,CAACE;AAFP;AAF8C,KAAnC,CAAvB;AAQA,QAAIC,IAAJ;;AAGC,QAAG;AACAA,MAAAA,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAb;AACF,KAFD,CAEE,OAAMC,KAAN,EAAY;AACX;AACAC,MAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACF;;AAGD,QAAGJ,QAAQ,CAACM,MAAT,GAAiB,GAAjB,IAAwBN,QAAQ,CAACM,MAAT,GAAgB,GAA3C,EAA+C;AAC5C,YAAMC,OAAO,GAAGL,IAAI,IAAIA,IAAI,CAACK,OAAb,GAAuBL,IAAI,CAACK,OAA5B,GAAsC,wBAAtD;AACA,YAAM,IAAIC,KAAJ,CAAUD,OAAV,CAAN;AACF;;AAED,WAAOL,IAAP;AACJ;;AAhC0B","sourcesContent":["export default class HttpClient{\n    constructor(baseURL){\n        this.baseURL=baseURL;\n    }\n\n    //url: 인자로 전달받는 나머지 경로\n    async fetch(url,options){\n        const response = await this.fetch(`${this.baseURL}${url}`,{\n            ...options, //인자로 받은것을 그대로 복사\n            headers:{\n                'Content-Type':'application/json',\n                ...options.headers\n            }\n        });\n\n        let data;\n\n\n         try{\n            data = await response.json();\n         } catch(error){\n            //response에 body가 없는 경우\n            console.error(error);\n         }\n         \n\n         if(response.status> 299 || response.status<200){\n            const message = data && data.message ? data.message : 'Sommething went wrong!'\n            throw new Error(message);\n         }\n\n         return data;\n    }\n\n   \n\n}"]},"metadata":{},"sourceType":"module"}